%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: wtorek, 23 wrzesieñ 2014 11:14:10 CEST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
1.00000 0 0 RG
10.5000 6.01709 374.486 346.982 rc
newpath
11.5000 8.01709 m
19.5973 37.3547 l
26.6428 61.8176 l
34.5661 88.1460 l
42.5420 113.384 l
50.4800 137.244 l
57.8395 158.242 l
65.4599 178.846 l
73.3409 198.937 l
81.1966 217.730 l
89.2771 235.778 l
96.3945 250.596 l
104.407 266.069 l
112.452 280.318 l
120.205 292.827 l
127.246 303.149 l
135.618 314.136 l
142.710 322.349 l
150.960 330.642 l
158.262 336.850 l
166.274 342.438 l
173.904 346.569 l
181.864 349.642 l
189.175 351.351 l
197.060 351.999 l
205.250 351.360 l
212.380 349.715 l
220.080 346.800 l
228.035 342.546 l
235.818 337.164 l
243.348 330.806 l
251.708 322.423 l
259.221 313.701 l
267.242 303.146 l
274.511 292.474 l
282.457 279.601 l
289.934 266.338 l
297.749 251.284 l
305.390 235.388 l
313.390 217.498 l
321.094 199.063 l
328.973 178.985 l
336.787 157.852 l
343.967 137.359 l
352.196 112.607 l
359.556 89.3253 l
367.404 63.3119 l
374.915 37.2636 l
382.986 8.01709 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
345.838 352.000 m
345.838 354.600 l
S
newpath
364.412 352.000 m
364.412 354.600 l
S
newpath
327.263 352.000 m
327.263 354.600 l
S
newpath
308.689 352.000 m
308.689 354.600 l
S
newpath
271.540 352.000 m
271.540 354.600 l
S
newpath
252.966 352.000 m
252.966 354.600 l
S
newpath
234.392 352.000 m
234.392 354.600 l
S
newpath
215.817 352.000 m
215.817 354.600 l
S
newpath
178.669 352.000 m
178.669 354.600 l
S
newpath
160.094 352.000 m
160.094 354.600 l
S
newpath
122.946 352.000 m
122.946 354.600 l
S
newpath
141.520 352.000 m
141.520 354.600 l
S
newpath
85.7973 352.000 m
85.7973 354.600 l
S
newpath
67.2230 352.000 m
67.2230 354.600 l
S
newpath
30.0743 352.000 m
30.0743 354.600 l
S
newpath
48.6486 352.000 m
48.6486 354.600 l
S
newpath
11.5000 352.000 m
382.986 352.000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
283 375 14 15 rc
newpath
289.250 381.250 m
289.458 381.468 289.614 381.692 289.718 381.921  c
289.802 382.067 289.927 382.463 290.093 383.109  c
290.656 382.281 l
290.802 382.072 290.981 381.877 291.195 381.695  c
291.408 381.513 291.593 381.385 291.750 381.312  c
291.854 381.270 291.968 381.250 292.093 381.250  c
292.270 381.250 292.414 381.299 292.523 381.398  c
292.632 381.497 292.687 381.614 292.687 381.750  c
292.687 381.916 292.656 382.031 292.593 382.093  c
292.479 382.197 292.343 382.250 292.187 382.250  c
292.093 382.250 292.000 382.229 291.906 382.187  c
291.708 382.125 291.572 382.093 291.500 382.093  c
291.395 382.093 291.276 382.151 291.140 382.265  c
290.880 382.484 290.567 382.911 290.203 383.546  c
290.718 385.718 l
290.802 386.052 290.869 386.252 290.921 386.320  c
290.974 386.388 291.031 386.421 291.093 386.421  c
291.177 386.421 291.281 386.375 291.406 386.281  c
291.635 386.083 291.833 385.828 292.000 385.515  c
292.218 385.625 l
291.947 386.125 291.609 386.541 291.203 386.875  c
290.974 387.062 290.776 387.156 290.609 387.156  c
290.369 387.156 290.182 387.020 290.046 386.750  c
289.953 386.583 289.770 385.875 289.500 384.625  c
288.833 385.770 288.302 386.505 287.906 386.828  c
287.645 387.046 287.395 387.156 287.156 387.156  c
286.989 387.156 286.833 387.093 286.687 386.968  c
286.593 386.875 286.546 386.750 286.546 386.593  c
286.546 386.458 286.593 386.343 286.687 386.250  c
286.781 386.156 286.895 386.109 287.031 386.109  c
287.166 386.109 287.307 386.177 287.453 386.312  c
287.567 386.406 287.656 386.453 287.718 386.453  c
287.760 386.453 287.822 386.421 287.906 386.359  c
288.104 386.192 288.375 385.843 288.718 385.312  c
289.062 384.781 289.286 384.395 289.390 384.156  c
289.130 383.125 288.989 382.583 288.968 382.531  c
288.875 382.250 288.750 382.052 288.593 381.937  c
288.437 381.822 288.203 381.765 287.890 381.765  c
287.796 381.765 287.687 381.770 287.562 381.781  c
287.562 381.546 l
289.250 381.250 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
11.5000 352.000 m
11.5000 357.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 365 7 13 rc
newpath
16.7968 372.437 m
8.20312 372.437 l
8.20312 371.765 l
16.7968 371.765 l
16.7968 372.437 l
h
f
Q
newpath
16.5312 368.234 m
18.6250 367.218 l
18.8281 367.218 l
18.8281 374.484 l
18.8281 374.963 18.8489 375.263 18.8906 375.382  c
18.9322 375.502 19.0156 375.593 19.1406 375.656  c
19.2656 375.718 19.5208 375.755 19.9062 375.765  c
19.9062 376.000 l
16.6718 376.000 l
16.6718 375.765 l
17.0781 375.755 17.3411 375.718 17.4609 375.656  c
17.5807 375.593 17.6640 375.510 17.7109 375.406  c
17.7578 375.302 17.7812 374.994 17.7812 374.484  c
17.7812 369.843 l
17.7812 369.208 17.7604 368.802 17.7187 368.625  c
17.6875 368.489 17.6328 368.390 17.5546 368.328  c
17.4765 368.265 17.3802 368.234 17.2656 368.234  c
17.1093 368.234 16.8958 368.302 16.6250 368.437  c
16.5312 368.234 l
h
21.9687 371.750 m
21.9687 370.770 22.1171 369.924 22.4140 369.210  c
22.7109 368.497 23.1041 367.968 23.5937 367.625  c
23.9791 367.354 24.3750 367.218 24.7812 367.218  c
25.4375 367.218 26.0260 367.552 26.5468 368.218  c
27.2031 369.052 27.5312 370.182 27.5312 371.609  c
27.5312 372.609 27.3880 373.458 27.1015 374.156  c
26.8151 374.854 26.4479 375.362 26.0000 375.679  c
25.5520 375.997 25.1250 376.156 24.7187 376.156  c
23.8958 376.156 23.2083 375.671 22.6562 374.703  c
22.1979 373.880 21.9687 372.895 21.9687 371.750  c
h
23.2187 371.906 m
23.2187 373.093 23.3645 374.062 23.6562 374.812  c
23.8958 375.437 24.2552 375.750 24.7343 375.750  c
24.9635 375.750 25.2005 375.648 25.4453 375.445  c
25.6901 375.242 25.8750 374.895 26.0000 374.406  c
26.1979 373.687 26.2968 372.661 26.2968 371.328  c
26.2968 370.349 26.1927 369.531 25.9843 368.875  c
25.8385 368.385 25.6406 368.041 25.3906 367.843  c
25.2239 367.708 25.0156 367.640 24.7656 367.640  c
24.4843 367.640 24.2291 367.765 24.0000 368.015  c
23.6979 368.369 23.4921 368.924 23.3828 369.679  c
23.2734 370.434 23.2187 371.177 23.2187 371.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
104.371 352.000 m
104.371 357.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
102 365 7 13 rc
newpath
112.796 372.437 m
104.203 372.437 l
104.203 371.765 l
112.796 371.765 l
112.796 372.437 l
h
f
Q
newpath
116.640 367.390 m
116.140 368.468 l
113.562 368.468 l
113.000 369.625 l
114.114 369.791 115.000 370.208 115.656 370.875  c
116.218 371.447 116.500 372.125 116.500 372.906  c
116.500 373.364 116.408 373.786 116.226 374.171  c
116.044 374.557 115.812 374.885 115.531 375.156  c
115.250 375.427 114.937 375.640 114.593 375.796  c
114.114 376.036 113.614 376.156 113.093 376.156  c
112.583 376.156 112.210 376.067 111.976 375.890  c
111.742 375.713 111.625 375.520 111.625 375.312  c
111.625 375.187 111.674 375.080 111.773 374.992  c
111.872 374.903 111.994 374.859 112.140 374.859  c
112.244 374.859 112.338 374.875 112.421 374.906  c
112.505 374.937 112.645 375.026 112.843 375.171  c
113.166 375.390 113.489 375.500 113.812 375.500  c
114.312 375.500 114.747 375.312 115.117 374.937  c
115.487 374.562 115.671 374.104 115.671 373.562  c
115.671 373.041 115.505 372.557 115.171 372.109  c
114.838 371.661 114.380 371.312 113.796 371.062  c
113.328 370.875 112.697 370.765 111.906 370.734  c
113.562 367.390 l
116.640 367.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.243 352.000 m
197.243 357.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
199.468 371.750 m
199.468 370.770 199.617 369.924 199.914 369.210  c
200.210 368.497 200.604 367.968 201.093 367.625  c
201.479 367.354 201.875 367.218 202.281 367.218  c
202.937 367.218 203.526 367.552 204.046 368.218  c
204.703 369.052 205.031 370.182 205.031 371.609  c
205.031 372.609 204.888 373.458 204.601 374.156  c
204.315 374.854 203.947 375.362 203.500 375.679  c
203.052 375.997 202.625 376.156 202.218 376.156  c
201.395 376.156 200.708 375.671 200.156 374.703  c
199.697 373.880 199.468 372.895 199.468 371.750  c
h
200.718 371.906 m
200.718 373.093 200.864 374.062 201.156 374.812  c
201.395 375.437 201.755 375.750 202.234 375.750  c
202.463 375.750 202.700 375.648 202.945 375.445  c
203.190 375.242 203.375 374.895 203.500 374.406  c
203.697 373.687 203.796 372.661 203.796 371.328  c
203.796 370.349 203.692 369.531 203.484 368.875  c
203.338 368.385 203.140 368.041 202.890 367.843  c
202.724 367.708 202.515 367.640 202.265 367.640  c
201.984 367.640 201.729 367.765 201.500 368.015  c
201.197 368.369 200.992 368.924 200.882 369.679  c
200.773 370.434 200.718 371.177 200.718 371.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
290.115 352.000 m
290.115 357.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
297.640 367.390 m
297.140 368.468 l
294.562 368.468 l
294.000 369.625 l
295.114 369.791 296.000 370.208 296.656 370.875  c
297.218 371.447 297.500 372.125 297.500 372.906  c
297.500 373.364 297.408 373.786 297.226 374.171  c
297.044 374.557 296.812 374.885 296.531 375.156  c
296.250 375.427 295.937 375.640 295.593 375.796  c
295.114 376.036 294.614 376.156 294.093 376.156  c
293.583 376.156 293.210 376.067 292.976 375.890  c
292.742 375.713 292.625 375.520 292.625 375.312  c
292.625 375.187 292.674 375.080 292.773 374.992  c
292.872 374.903 292.994 374.859 293.140 374.859  c
293.244 374.859 293.338 374.875 293.421 374.906  c
293.505 374.937 293.645 375.026 293.843 375.171  c
294.166 375.390 294.489 375.500 294.812 375.500  c
295.312 375.500 295.747 375.312 296.117 374.937  c
296.487 374.562 296.671 374.104 296.671 373.562  c
296.671 373.041 296.505 372.557 296.171 372.109  c
295.838 371.661 295.380 371.312 294.796 371.062  c
294.328 370.875 293.697 370.765 292.906 370.734  c
294.562 367.390 l
297.640 367.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
382.986 352.000 m
382.986 357.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
382.531 368.234 m
384.625 367.218 l
384.828 367.218 l
384.828 374.484 l
384.828 374.963 384.849 375.263 384.890 375.382  c
384.932 375.502 385.015 375.593 385.140 375.656  c
385.265 375.718 385.520 375.755 385.906 375.765  c
385.906 376.000 l
382.671 376.000 l
382.671 375.765 l
383.078 375.755 383.341 375.718 383.460 375.656  c
383.580 375.593 383.664 375.510 383.710 375.406  c
383.757 375.302 383.781 374.994 383.781 374.484  c
383.781 369.843 l
383.781 369.208 383.760 368.802 383.718 368.625  c
383.687 368.489 383.632 368.390 383.554 368.328  c
383.476 368.265 383.380 368.234 383.265 368.234  c
383.109 368.234 382.895 368.302 382.625 368.437  c
382.531 368.234 l
h
387.968 371.750 m
387.968 370.770 388.117 369.924 388.414 369.210  c
388.710 368.497 389.104 367.968 389.593 367.625  c
389.979 367.354 390.375 367.218 390.781 367.218  c
391.437 367.218 392.026 367.552 392.546 368.218  c
393.203 369.052 393.531 370.182 393.531 371.609  c
393.531 372.609 393.388 373.458 393.101 374.156  c
392.815 374.854 392.447 375.362 392.000 375.679  c
391.552 375.997 391.125 376.156 390.718 376.156  c
389.895 376.156 389.208 375.671 388.656 374.703  c
388.197 373.880 387.968 372.895 387.968 371.750  c
h
389.218 371.906 m
389.218 373.093 389.364 374.062 389.656 374.812  c
389.895 375.437 390.255 375.750 390.734 375.750  c
390.963 375.750 391.200 375.648 391.445 375.445  c
391.690 375.242 391.875 374.895 392.000 374.406  c
392.197 373.687 392.296 372.661 392.296 371.328  c
392.296 370.349 392.192 369.531 391.984 368.875  c
391.838 368.385 391.640 368.041 391.390 367.843  c
391.224 367.708 391.015 367.640 390.765 367.640  c
390.484 367.640 390.229 367.765 390.000 368.015  c
389.697 368.369 389.492 368.924 389.382 369.679  c
389.273 370.434 389.218 371.177 389.218 371.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
197.243 317.601 m
194.643 317.601 l
S
newpath
197.243 248.805 m
194.643 248.805 l
S
newpath
197.243 180.008 m
194.643 180.008 l
S
newpath
197.243 111.212 m
194.643 111.212 l
S
newpath
197.243 42.4153 m
194.643 42.4153 l
S
newpath
197.243 351.999 m
197.243 8.01709 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
156 173 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
197.243 352.000 m
192.043 352.000 l
S
Q
q
newpath
197.243 283.203 m
192.043 283.203 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
186.953 291.343 m
186.359 293.000 l
181.281 293.000 l
181.281 292.765 l
182.770 291.401 183.820 290.286 184.429 289.421  c
185.039 288.557 185.343 287.770 185.343 287.062  c
185.343 286.510 185.177 286.059 184.843 285.710  c
184.510 285.362 184.109 285.187 183.640 285.187  c
183.224 285.187 182.846 285.309 182.507 285.554  c
182.169 285.799 181.921 286.161 181.765 286.640  c
181.531 286.640 l
181.635 285.859 181.906 285.260 182.343 284.843  c
182.781 284.427 183.328 284.218 183.984 284.218  c
184.682 284.218 185.265 284.442 185.734 284.890  c
186.203 285.338 186.437 285.864 186.437 286.468  c
186.437 286.906 186.333 287.343 186.125 287.781  c
185.812 288.468 185.307 289.192 184.609 289.953  c
183.557 291.109 182.895 291.807 182.625 292.046  c
184.875 292.046 l
185.333 292.046 185.653 292.028 185.835 291.992  c
186.018 291.955 186.184 291.885 186.335 291.781  c
186.487 291.677 186.614 291.531 186.718 291.343  c
186.953 291.343 l
h
187.968 288.750 m
187.968 287.770 188.117 286.924 188.414 286.210  c
188.710 285.497 189.104 284.968 189.593 284.625  c
189.979 284.354 190.375 284.218 190.781 284.218  c
191.437 284.218 192.026 284.552 192.546 285.218  c
193.203 286.052 193.531 287.182 193.531 288.609  c
193.531 289.609 193.388 290.458 193.101 291.156  c
192.815 291.854 192.447 292.362 192.000 292.679  c
191.552 292.997 191.125 293.156 190.718 293.156  c
189.895 293.156 189.208 292.671 188.656 291.703  c
188.197 290.880 187.968 289.895 187.968 288.750  c
h
189.218 288.906 m
189.218 290.093 189.364 291.062 189.656 291.812  c
189.895 292.437 190.255 292.750 190.734 292.750  c
190.963 292.750 191.200 292.648 191.445 292.445  c
191.690 292.242 191.875 291.895 192.000 291.406  c
192.197 290.687 192.296 289.661 192.296 288.328  c
192.296 287.349 192.192 286.531 191.984 285.875  c
191.838 285.385 191.640 285.041 191.390 284.843  c
191.224 284.708 191.015 284.640 190.765 284.640  c
190.484 284.640 190.229 284.765 190.000 285.015  c
189.697 285.369 189.492 285.924 189.382 286.679  c
189.273 287.434 189.218 288.177 189.218 288.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.243 214.406 m
192.043 214.406 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
187.046 220.828 m
187.046 221.734 l
185.890 221.734 l
185.890 224.000 l
184.843 224.000 l
184.843 221.734 l
181.203 221.734 l
181.203 220.921 l
185.203 215.218 l
185.890 215.218 l
185.890 220.828 l
187.046 220.828 l
h
184.843 220.828 m
184.843 216.546 l
181.828 220.828 l
184.843 220.828 l
h
187.968 219.750 m
187.968 218.770 188.117 217.924 188.414 217.210  c
188.710 216.497 189.104 215.968 189.593 215.625  c
189.979 215.354 190.375 215.218 190.781 215.218  c
191.437 215.218 192.026 215.552 192.546 216.218  c
193.203 217.052 193.531 218.182 193.531 219.609  c
193.531 220.609 193.388 221.458 193.101 222.156  c
192.815 222.854 192.447 223.362 192.000 223.679  c
191.552 223.997 191.125 224.156 190.718 224.156  c
189.895 224.156 189.208 223.671 188.656 222.703  c
188.197 221.880 187.968 220.895 187.968 219.750  c
h
189.218 219.906 m
189.218 221.093 189.364 222.062 189.656 222.812  c
189.895 223.437 190.255 223.750 190.734 223.750  c
190.963 223.750 191.200 223.648 191.445 223.445  c
191.690 223.242 191.875 222.895 192.000 222.406  c
192.197 221.687 192.296 220.661 192.296 219.328  c
192.296 218.349 192.192 217.531 191.984 216.875  c
191.838 216.385 191.640 216.041 191.390 215.843  c
191.224 215.708 191.015 215.640 190.765 215.640  c
190.484 215.640 190.229 215.765 190.000 216.015  c
189.697 216.369 189.492 216.924 189.382 217.679  c
189.273 218.434 189.218 219.177 189.218 219.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.243 145.610 m
192.043 145.610 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
186.828 146.218 m
186.828 146.453 l
186.265 146.505 185.807 146.614 185.453 146.781  c
185.099 146.947 184.750 147.203 184.406 147.546  c
184.062 147.890 183.778 148.273 183.554 148.695  c
183.330 149.117 183.140 149.614 182.984 150.187  c
183.599 149.770 184.213 149.562 184.828 149.562  c
185.411 149.562 185.919 149.799 186.351 150.273  c
186.783 150.747 187.000 151.359 187.000 152.109  c
187.000 152.828 186.781 153.484 186.343 154.078  c
185.822 154.796 185.130 155.156 184.265 155.156  c
183.671 155.156 183.171 154.958 182.765 154.562  c
181.963 153.812 181.562 152.833 181.562 151.625  c
181.562 150.854 181.716 150.122 182.023 149.429  c
182.330 148.737 182.770 148.119 183.343 147.578  c
183.916 147.036 184.466 146.674 184.992 146.492  c
185.518 146.309 186.005 146.218 186.453 146.218  c
186.828 146.218 l
h
182.875 150.656 m
182.802 151.229 182.765 151.692 182.765 152.046  c
182.765 152.453 182.841 152.893 182.992 153.367  c
183.143 153.841 183.364 154.218 183.656 154.500  c
183.875 154.697 184.140 154.796 184.453 154.796  c
184.817 154.796 185.145 154.622 185.437 154.273  c
185.729 153.924 185.875 153.432 185.875 152.796  c
185.875 152.067 185.729 151.440 185.437 150.914  c
185.145 150.388 184.739 150.125 184.218 150.125  c
184.052 150.125 183.877 150.158 183.695 150.226  c
183.513 150.294 183.239 150.437 182.875 150.656  c
h
187.968 150.750 m
187.968 149.770 188.117 148.924 188.414 148.210  c
188.710 147.497 189.104 146.968 189.593 146.625  c
189.979 146.354 190.375 146.218 190.781 146.218  c
191.437 146.218 192.026 146.552 192.546 147.218  c
193.203 148.052 193.531 149.182 193.531 150.609  c
193.531 151.609 193.388 152.458 193.101 153.156  c
192.815 153.854 192.447 154.362 192.000 154.679  c
191.552 154.997 191.125 155.156 190.718 155.156  c
189.895 155.156 189.208 154.671 188.656 153.703  c
188.197 152.880 187.968 151.895 187.968 150.750  c
h
189.218 150.906 m
189.218 152.093 189.364 153.062 189.656 153.812  c
189.895 154.437 190.255 154.750 190.734 154.750  c
190.963 154.750 191.200 154.648 191.445 154.445  c
191.690 154.242 191.875 153.895 192.000 153.406  c
192.197 152.687 192.296 151.661 192.296 150.328  c
192.296 149.349 192.192 148.531 191.984 147.875  c
191.838 147.385 191.640 147.041 191.390 146.843  c
191.224 146.708 191.015 146.640 190.765 146.640  c
190.484 146.640 190.229 146.765 190.000 147.015  c
189.697 147.369 189.492 147.924 189.382 148.679  c
189.273 149.434 189.218 150.177 189.218 150.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.243 76.8136 m
192.043 76.8136 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
183.500 81.6718 m
182.812 81.1093 182.369 80.6588 182.171 80.3203  c
181.974 79.9817 181.875 79.6302 181.875 79.2656  c
181.875 78.7031 182.091 78.2213 182.523 77.8203  c
182.955 77.4192 183.531 77.2187 184.250 77.2187  c
184.947 77.2187 185.507 77.4062 185.929 77.7812  c
186.351 78.1562 186.562 78.5833 186.562 79.0625  c
186.562 79.3854 186.447 79.7135 186.218 80.0468  c
185.989 80.3802 185.515 80.7760 184.796 81.2343  c
185.536 81.8072 186.026 82.2604 186.265 82.5937  c
186.588 83.0208 186.750 83.4739 186.750 83.9531  c
186.750 84.5572 186.520 85.0755 186.062 85.5078  c
185.604 85.9401 185.000 86.1562 184.250 86.1562  c
183.427 86.1562 182.786 85.9010 182.328 85.3906  c
181.963 84.9739 181.781 84.5208 181.781 84.0312  c
181.781 83.6562 181.911 83.2812 182.171 82.9062  c
182.432 82.5312 182.875 82.1197 183.500 81.6718  c
h
184.484 80.9843 m
184.994 80.5260 185.317 80.1640 185.453 79.8984  c
185.588 79.6328 185.656 79.3333 185.656 79.0000  c
185.656 78.5625 185.531 78.2161 185.281 77.9609  c
185.031 77.7057 184.692 77.5781 184.265 77.5781  c
183.828 77.5781 183.474 77.7031 183.203 77.9531  c
182.932 78.2031 182.796 78.4947 182.796 78.8281  c
182.796 79.0468 182.854 79.2682 182.968 79.4921  c
183.083 79.7161 183.244 79.9270 183.453 80.1250  c
184.484 80.9843 l
h
183.796 81.9062 m
183.442 82.1979 183.182 82.5182 183.015 82.8671  c
182.849 83.2161 182.765 83.5937 182.765 84.0000  c
182.765 84.5520 182.914 84.9921 183.210 85.3203  c
183.507 85.6484 183.885 85.8125 184.343 85.8125  c
184.802 85.8125 185.169 85.6822 185.445 85.4218  c
185.721 85.1614 185.859 84.8489 185.859 84.4843  c
185.859 84.1822 185.776 83.9062 185.609 83.6562  c
185.317 83.2083 184.713 82.6250 183.796 81.9062  c
h
187.968 81.7500 m
187.968 80.7708 188.117 79.9244 188.414 79.2109  c
188.710 78.4974 189.104 77.9687 189.593 77.6250  c
189.979 77.3541 190.375 77.2187 190.781 77.2187  c
191.437 77.2187 192.026 77.5520 192.546 78.2187  c
193.203 79.0520 193.531 80.1822 193.531 81.6093  c
193.531 82.6093 193.388 83.4583 193.101 84.1562  c
192.815 84.8541 192.447 85.3619 192.000 85.6796  c
191.552 85.9974 191.125 86.1562 190.718 86.1562  c
189.895 86.1562 189.208 85.6718 188.656 84.7031  c
188.197 83.8802 187.968 82.8958 187.968 81.7500  c
h
189.218 81.9062 m
189.218 83.0937 189.364 84.0625 189.656 84.8125  c
189.895 85.4375 190.255 85.7500 190.734 85.7500  c
190.963 85.7500 191.200 85.6484 191.445 85.4453  c
191.690 85.2421 191.875 84.8958 192.000 84.4062  c
192.197 83.6875 192.296 82.6614 192.296 81.3281  c
192.296 80.3489 192.192 79.5312 191.984 78.8750  c
191.838 78.3854 191.640 78.0416 191.390 77.8437  c
191.224 77.7083 191.015 77.6406 190.765 77.6406  c
190.484 77.6406 190.229 77.7656 190.000 78.0156  c
189.697 78.3697 189.492 78.9244 189.382 79.6796  c
189.273 80.4349 189.218 81.1770 189.218 81.9062  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.243 8.01709 m
192.043 8.01709 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
176.531 10.2343 m
178.625 9.21875 l
178.828 9.21875 l
178.828 16.4843 l
178.828 16.9635 178.849 17.2630 178.890 17.3828  c
178.932 17.5026 179.015 17.5937 179.140 17.6562  c
179.265 17.7187 179.520 17.7552 179.906 17.7656  c
179.906 18.0000 l
176.671 18.0000 l
176.671 17.7656 l
177.078 17.7552 177.341 17.7187 177.460 17.6562  c
177.580 17.5937 177.664 17.5104 177.710 17.4062  c
177.757 17.3020 177.781 16.9947 177.781 16.4843  c
177.781 11.8437 l
177.781 11.2083 177.760 10.8020 177.718 10.6250  c
177.687 10.4895 177.632 10.3906 177.554 10.3281  c
177.476 10.2656 177.380 10.2343 177.265 10.2343  c
177.109 10.2343 176.895 10.3020 176.625 10.4375  c
176.531 10.2343 l
h
181.968 13.7500 m
181.968 12.7708 182.117 11.9244 182.414 11.2109  c
182.710 10.4974 183.104 9.96875 183.593 9.62500  c
183.979 9.35416 184.375 9.21875 184.781 9.21875  c
185.437 9.21875 186.026 9.55208 186.546 10.2187  c
187.203 11.0520 187.531 12.1822 187.531 13.6093  c
187.531 14.6093 187.388 15.4583 187.101 16.1562  c
186.815 16.8541 186.447 17.3619 186.000 17.6796  c
185.552 17.9974 185.125 18.1562 184.718 18.1562  c
183.895 18.1562 183.208 17.6718 182.656 16.7031  c
182.197 15.8802 181.968 14.8958 181.968 13.7500  c
h
183.218 13.9062 m
183.218 15.0937 183.364 16.0625 183.656 16.8125  c
183.895 17.4375 184.255 17.7500 184.734 17.7500  c
184.963 17.7500 185.200 17.6484 185.445 17.4453  c
185.690 17.2421 185.875 16.8958 186.000 16.4062  c
186.197 15.6875 186.296 14.6614 186.296 13.3281  c
186.296 12.3489 186.192 11.5312 185.984 10.8750  c
185.838 10.3854 185.640 10.0416 185.390 9.84375  c
185.224 9.70833 185.015 9.64062 184.765 9.64062  c
184.484 9.64062 184.229 9.76562 184.000 10.0156  c
183.697 10.3697 183.492 10.9244 183.382 11.6796  c
183.273 12.4349 183.218 13.1770 183.218 13.9062  c
h
188.468 13.7500 m
188.468 12.7708 188.617 11.9244 188.914 11.2109  c
189.210 10.4974 189.604 9.96875 190.093 9.62500  c
190.479 9.35416 190.875 9.21875 191.281 9.21875  c
191.937 9.21875 192.526 9.55208 193.046 10.2187  c
193.703 11.0520 194.031 12.1822 194.031 13.6093  c
194.031 14.6093 193.888 15.4583 193.601 16.1562  c
193.315 16.8541 192.947 17.3619 192.500 17.6796  c
192.052 17.9974 191.625 18.1562 191.218 18.1562  c
190.395 18.1562 189.708 17.6718 189.156 16.7031  c
188.697 15.8802 188.468 14.8958 188.468 13.7500  c
h
189.718 13.9062 m
189.718 15.0937 189.864 16.0625 190.156 16.8125  c
190.395 17.4375 190.755 17.7500 191.234 17.7500  c
191.463 17.7500 191.700 17.6484 191.945 17.4453  c
192.190 17.2421 192.375 16.8958 192.500 16.4062  c
192.697 15.6875 192.796 14.6614 192.796 13.3281  c
192.796 12.3489 192.692 11.5312 192.484 10.8750  c
192.338 10.3854 192.140 10.0416 191.890 9.84375  c
191.724 9.70833 191.515 9.64062 191.265 9.64062  c
190.984 9.64062 190.729 9.76562 190.500 10.0156  c
190.197 10.3697 189.992 10.9244 189.882 11.6796  c
189.773 12.4349 189.718 13.1770 189.718 13.9062  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
