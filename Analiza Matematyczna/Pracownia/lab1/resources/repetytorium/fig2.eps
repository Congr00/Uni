%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: wtorek, 23 wrzesieñ 2014 11:14:27 CEST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
1.00000 0 0 RG
10.5000 6.01661 374.486 376.483 rc
newpath
11.5000 93.1662 m
13.5243 110.812 l
15.5486 129.454 l
17.5730 148.871 l
19.5973 168.832 l
23.1200 204.161 l
26.6428 239.152 l
28.6236 258.208 l
30.6045 276.542 l
32.5853 293.947 l
34.5661 310.225 l
38.5541 338.843 l
42.5420 360.844 l
46.5110 375.170 l
50.4800 381.290 l
51.3999 381.499 l
52.3199 381.251 l
53.2398 380.545 l
54.1598 379.383 l
55.9996 375.706 l
57.8395 370.255 l
61.6497 353.575 l
65.4599 330.236 l
69.4004 300.137 l
73.3409 265.313 l
75.3048 246.671 l
77.2687 227.450 l
79.2326 207.864 l
81.1966 188.131 l
83.2167 167.913 l
85.2368 148.012 l
87.2570 128.664 l
89.2771 110.096 l
92.8358 79.9503 l
96.3945 54.0055 l
100.400 31.0014 l
104.407 15.5859 l
106.418 10.9473 l
108.429 8.46188 l
109.435 8.03674 l
110.441 8.15884 l
111.446 8.82778 l
112.452 10.0416 l
116.329 19.7339 l
120.205 37.0224 l
123.725 58.6788 l
127.246 85.2087 l
129.339 102.908 l
131.432 121.773 l
133.525 141.564 l
135.618 162.030 l
139.164 197.511 l
142.710 232.893 l
144.772 252.915 l
146.835 272.221 l
148.897 290.573 l
150.960 307.744 l
154.611 334.608 l
158.262 356.085 l
162.268 372.475 l
166.274 380.631 l
167.228 381.309 l
168.182 381.496 l
169.136 381.190 l
170.089 380.393 l
171.997 377.335 l
173.904 372.353 l
177.884 356.015 l
181.864 332.301 l
185.519 304.951 l
189.175 273.348 l
191.146 254.962 l
193.117 235.898 l
195.088 216.371 l
199.107 176.046 l
201.155 155.719 l
203.202 135.866 l
205.250 116.727 l
208.815 85.7986 l
212.380 58.8706 l
216.230 35.4181 l
220.080 18.7874 l
222.069 13.1153 l
224.057 9.52359 l
225.052 8.52169 l
226.046 8.05343 l
227.041 8.12017 l
228.035 8.72171 l
231.926 16.1629 l
235.818 31.4140 l
239.583 52.9784 l
243.348 80.3482 l
245.438 97.6455 l
247.528 116.171 l
249.618 135.691 l
251.708 155.958 l
253.587 174.595 l
257.343 212.294 l
259.221 230.971 l
261.226 250.500 l
263.232 269.380 l
265.237 287.391 l
267.242 304.324 l
270.876 331.632 l
274.511 353.718 l
278.484 370.899 l
282.457 380.050 l
283.392 380.984 l
284.326 381.446 l
285.261 381.435 l
286.195 380.952 l
288.065 378.574 l
289.934 374.336 l
293.842 359.679 l
297.749 337.748 l
301.570 310.203 l
305.390 277.790 l
307.390 259.335 l
309.390 240.131 l
311.390 220.403 l
313.390 200.377 l
315.316 181.025 l
317.242 161.821 l
319.168 142.971 l
321.094 124.678 l
325.034 89.8111 l
328.973 59.6474 l
332.880 35.7103 l
336.787 18.7836 l
338.582 13.5746 l
340.377 10.0564 l
341.274 8.94220 l
342.172 8.26174 l
343.069 8.01660 l
343.967 8.20736 l
348.081 14.6239 l
352.196 29.8434 l
355.876 50.3146 l
359.556 76.4373 l
363.480 109.360 l
367.404 146.080 l
369.281 164.523 l
371.159 183.275 l
373.037 202.145 l
374.915 220.939 l
376.933 240.832 l
378.950 260.182 l
380.968 278.761 l
382.986 296.349 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
30.0743 194.757 m
30.0743 197.357 l
S
newpath
48.6486 194.757 m
48.6486 197.357 l
S
newpath
67.2230 194.757 m
67.2230 197.357 l
S
newpath
85.7973 194.757 m
85.7973 197.357 l
S
newpath
122.946 194.757 m
122.946 197.357 l
S
newpath
141.520 194.757 m
141.520 197.357 l
S
newpath
160.094 194.757 m
160.094 197.357 l
S
newpath
178.669 194.757 m
178.669 197.357 l
S
newpath
215.817 194.757 m
215.817 197.357 l
S
newpath
234.392 194.757 m
234.392 197.357 l
S
newpath
252.966 194.757 m
252.966 197.357 l
S
newpath
271.540 194.757 m
271.540 197.357 l
S
newpath
308.689 194.757 m
308.689 197.357 l
S
newpath
327.263 194.757 m
327.263 197.357 l
S
newpath
345.838 194.757 m
345.838 197.357 l
S
newpath
364.412 194.757 m
364.412 197.357 l
S
newpath
11.5000 194.757 m
382.986 194.757 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
283 218 14 15 rc
newpath
289.250 224.250 m
289.458 224.468 289.614 224.692 289.718 224.921  c
289.802 225.067 289.927 225.463 290.093 226.109  c
290.656 225.281 l
290.802 225.072 290.981 224.877 291.195 224.695  c
291.408 224.513 291.593 224.385 291.750 224.312  c
291.854 224.270 291.968 224.250 292.093 224.250  c
292.270 224.250 292.414 224.299 292.523 224.398  c
292.632 224.497 292.687 224.614 292.687 224.750  c
292.687 224.916 292.656 225.031 292.593 225.093  c
292.479 225.197 292.343 225.250 292.187 225.250  c
292.093 225.250 292.000 225.229 291.906 225.187  c
291.708 225.125 291.572 225.093 291.500 225.093  c
291.395 225.093 291.276 225.151 291.140 225.265  c
290.880 225.484 290.567 225.911 290.203 226.546  c
290.718 228.718 l
290.802 229.052 290.869 229.252 290.921 229.320  c
290.974 229.388 291.031 229.421 291.093 229.421  c
291.177 229.421 291.281 229.375 291.406 229.281  c
291.635 229.083 291.833 228.828 292.000 228.515  c
292.218 228.625 l
291.947 229.125 291.609 229.541 291.203 229.875  c
290.974 230.062 290.776 230.156 290.609 230.156  c
290.369 230.156 290.182 230.020 290.046 229.750  c
289.953 229.583 289.770 228.875 289.500 227.625  c
288.833 228.770 288.302 229.505 287.906 229.828  c
287.645 230.046 287.395 230.156 287.156 230.156  c
286.989 230.156 286.833 230.093 286.687 229.968  c
286.593 229.875 286.546 229.750 286.546 229.593  c
286.546 229.458 286.593 229.343 286.687 229.250  c
286.781 229.156 286.895 229.109 287.031 229.109  c
287.166 229.109 287.307 229.177 287.453 229.312  c
287.567 229.406 287.656 229.453 287.718 229.453  c
287.760 229.453 287.822 229.421 287.906 229.359  c
288.104 229.192 288.375 228.843 288.718 228.312  c
289.062 227.781 289.286 227.395 289.390 227.156  c
289.130 226.125 288.989 225.583 288.968 225.531  c
288.875 225.250 288.750 225.052 288.593 224.937  c
288.437 224.822 288.203 224.765 287.890 224.765  c
287.796 224.765 287.687 224.770 287.562 224.781  c
287.562 224.546 l
289.250 224.250 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
11.5000 194.757 m
11.5000 199.957 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 207 7 13 rc
newpath
16.7968 214.437 m
8.20312 214.437 l
8.20312 213.765 l
16.7968 213.765 l
16.7968 214.437 l
h
f
Q
newpath
16.5312 210.234 m
18.6250 209.218 l
18.8281 209.218 l
18.8281 216.484 l
18.8281 216.963 18.8489 217.263 18.8906 217.382  c
18.9322 217.502 19.0156 217.593 19.1406 217.656  c
19.2656 217.718 19.5208 217.755 19.9062 217.765  c
19.9062 218.000 l
16.6718 218.000 l
16.6718 217.765 l
17.0781 217.755 17.3411 217.718 17.4609 217.656  c
17.5807 217.593 17.6640 217.510 17.7109 217.406  c
17.7578 217.302 17.7812 216.994 17.7812 216.484  c
17.7812 211.843 l
17.7812 211.208 17.7604 210.802 17.7187 210.625  c
17.6875 210.489 17.6328 210.390 17.5546 210.328  c
17.4765 210.265 17.3802 210.234 17.2656 210.234  c
17.1093 210.234 16.8958 210.302 16.6250 210.437  c
16.5312 210.234 l
h
21.9687 213.750 m
21.9687 212.770 22.1171 211.924 22.4140 211.210  c
22.7109 210.497 23.1041 209.968 23.5937 209.625  c
23.9791 209.354 24.3750 209.218 24.7812 209.218  c
25.4375 209.218 26.0260 209.552 26.5468 210.218  c
27.2031 211.052 27.5312 212.182 27.5312 213.609  c
27.5312 214.609 27.3880 215.458 27.1015 216.156  c
26.8151 216.854 26.4479 217.362 26.0000 217.679  c
25.5520 217.997 25.1250 218.156 24.7187 218.156  c
23.8958 218.156 23.2083 217.671 22.6562 216.703  c
22.1979 215.880 21.9687 214.895 21.9687 213.750  c
h
23.2187 213.906 m
23.2187 215.093 23.3645 216.062 23.6562 216.812  c
23.8958 217.437 24.2552 217.750 24.7343 217.750  c
24.9635 217.750 25.2005 217.648 25.4453 217.445  c
25.6901 217.242 25.8750 216.895 26.0000 216.406  c
26.1979 215.687 26.2968 214.661 26.2968 213.328  c
26.2968 212.349 26.1927 211.531 25.9843 210.875  c
25.8385 210.385 25.6406 210.041 25.3906 209.843  c
25.2239 209.708 25.0156 209.640 24.7656 209.640  c
24.4843 209.640 24.2291 209.765 24.0000 210.015  c
23.6979 210.369 23.4921 210.924 23.3828 211.679  c
23.2734 212.434 23.2187 213.177 23.2187 213.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
104.371 194.757 m
104.371 199.957 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
102 207 7 13 rc
newpath
112.796 214.437 m
104.203 214.437 l
104.203 213.765 l
112.796 213.765 l
112.796 214.437 l
h
f
Q
newpath
116.640 209.390 m
116.140 210.468 l
113.562 210.468 l
113.000 211.625 l
114.114 211.791 115.000 212.208 115.656 212.875  c
116.218 213.447 116.500 214.125 116.500 214.906  c
116.500 215.364 116.408 215.786 116.226 216.171  c
116.044 216.557 115.812 216.885 115.531 217.156  c
115.250 217.427 114.937 217.640 114.593 217.796  c
114.114 218.036 113.614 218.156 113.093 218.156  c
112.583 218.156 112.210 218.067 111.976 217.890  c
111.742 217.713 111.625 217.520 111.625 217.312  c
111.625 217.187 111.674 217.080 111.773 216.992  c
111.872 216.903 111.994 216.859 112.140 216.859  c
112.244 216.859 112.338 216.875 112.421 216.906  c
112.505 216.937 112.645 217.026 112.843 217.171  c
113.166 217.390 113.489 217.500 113.812 217.500  c
114.312 217.500 114.747 217.312 115.117 216.937  c
115.487 216.562 115.671 216.104 115.671 215.562  c
115.671 215.041 115.505 214.557 115.171 214.109  c
114.838 213.661 114.380 213.312 113.796 213.062  c
113.328 212.875 112.697 212.765 111.906 212.734  c
113.562 209.390 l
116.640 209.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.243 194.757 m
197.243 199.957 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
194.468 211.750 m
194.468 210.770 194.617 209.924 194.914 209.210  c
195.210 208.497 195.604 207.968 196.093 207.625  c
196.479 207.354 196.875 207.218 197.281 207.218  c
197.937 207.218 198.526 207.552 199.046 208.218  c
199.703 209.052 200.031 210.182 200.031 211.609  c
200.031 212.609 199.888 213.458 199.601 214.156  c
199.315 214.854 198.947 215.362 198.500 215.679  c
198.052 215.997 197.625 216.156 197.218 216.156  c
196.395 216.156 195.708 215.671 195.156 214.703  c
194.697 213.880 194.468 212.895 194.468 211.750  c
h
195.718 211.906 m
195.718 213.093 195.864 214.062 196.156 214.812  c
196.395 215.437 196.755 215.750 197.234 215.750  c
197.463 215.750 197.700 215.648 197.945 215.445  c
198.190 215.242 198.375 214.895 198.500 214.406  c
198.697 213.687 198.796 212.661 198.796 211.328  c
198.796 210.349 198.692 209.531 198.484 208.875  c
198.338 208.385 198.140 208.041 197.890 207.843  c
197.724 207.708 197.515 207.640 197.265 207.640  c
196.984 207.640 196.729 207.765 196.500 208.015  c
196.197 208.369 195.992 208.924 195.882 209.679  c
195.773 210.434 195.718 211.177 195.718 211.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
290.115 194.757 m
290.115 199.957 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
297.640 209.390 m
297.140 210.468 l
294.562 210.468 l
294.000 211.625 l
295.114 211.791 296.000 212.208 296.656 212.875  c
297.218 213.447 297.500 214.125 297.500 214.906  c
297.500 215.364 297.408 215.786 297.226 216.171  c
297.044 216.557 296.812 216.885 296.531 217.156  c
296.250 217.427 295.937 217.640 295.593 217.796  c
295.114 218.036 294.614 218.156 294.093 218.156  c
293.583 218.156 293.210 218.067 292.976 217.890  c
292.742 217.713 292.625 217.520 292.625 217.312  c
292.625 217.187 292.674 217.080 292.773 216.992  c
292.872 216.903 292.994 216.859 293.140 216.859  c
293.244 216.859 293.338 216.875 293.421 216.906  c
293.505 216.937 293.645 217.026 293.843 217.171  c
294.166 217.390 294.489 217.500 294.812 217.500  c
295.312 217.500 295.747 217.312 296.117 216.937  c
296.487 216.562 296.671 216.104 296.671 215.562  c
296.671 215.041 296.505 214.557 296.171 214.109  c
295.838 213.661 295.380 213.312 294.796 213.062  c
294.328 212.875 293.697 212.765 292.906 212.734  c
294.562 209.390 l
297.640 209.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
382.986 194.757 m
382.986 199.957 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
382.531 210.234 m
384.625 209.218 l
384.828 209.218 l
384.828 216.484 l
384.828 216.963 384.849 217.263 384.890 217.382  c
384.932 217.502 385.015 217.593 385.140 217.656  c
385.265 217.718 385.520 217.755 385.906 217.765  c
385.906 218.000 l
382.671 218.000 l
382.671 217.765 l
383.078 217.755 383.341 217.718 383.460 217.656  c
383.580 217.593 383.664 217.510 383.710 217.406  c
383.757 217.302 383.781 216.994 383.781 216.484  c
383.781 211.843 l
383.781 211.208 383.760 210.802 383.718 210.625  c
383.687 210.489 383.632 210.390 383.554 210.328  c
383.476 210.265 383.380 210.234 383.265 210.234  c
383.109 210.234 382.895 210.302 382.625 210.437  c
382.531 210.234 l
h
387.968 213.750 m
387.968 212.770 388.117 211.924 388.414 211.210  c
388.710 210.497 389.104 209.968 389.593 209.625  c
389.979 209.354 390.375 209.218 390.781 209.218  c
391.437 209.218 392.026 209.552 392.546 210.218  c
393.203 211.052 393.531 212.182 393.531 213.609  c
393.531 214.609 393.388 215.458 393.101 216.156  c
392.815 216.854 392.447 217.362 392.000 217.679  c
391.552 217.997 391.125 218.156 390.718 218.156  c
389.895 218.156 389.208 217.671 388.656 216.703  c
388.197 215.880 387.968 214.895 387.968 213.750  c
h
389.218 213.906 m
389.218 215.093 389.364 216.062 389.656 216.812  c
389.895 217.437 390.255 217.750 390.734 217.750  c
390.963 217.750 391.200 217.648 391.445 217.445  c
391.690 217.242 391.875 216.895 392.000 216.406  c
392.197 215.687 392.296 214.661 392.296 213.328  c
392.296 212.349 392.192 211.531 391.984 210.875  c
391.838 210.385 391.640 210.041 391.390 209.843  c
391.224 209.708 391.015 209.640 390.765 209.640  c
390.484 209.640 390.229 209.765 390.000 210.015  c
389.697 210.369 389.492 210.924 389.382 211.679  c
389.273 212.434 389.218 213.177 389.218 213.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
197.243 362.825 m
194.643 362.825 l
S
newpath
197.243 344.151 m
194.643 344.151 l
S
newpath
197.243 325.477 m
194.643 325.477 l
S
newpath
197.243 306.803 m
194.643 306.803 l
S
newpath
197.243 269.454 m
194.643 269.454 l
S
newpath
197.243 250.780 m
194.643 250.780 l
S
newpath
197.243 232.106 m
194.643 232.106 l
S
newpath
197.243 213.432 m
194.643 213.432 l
S
newpath
197.243 176.083 m
194.643 176.083 l
S
newpath
197.243 157.409 m
194.643 157.409 l
S
newpath
197.243 138.735 m
194.643 138.735 l
S
newpath
197.243 120.061 m
194.643 120.061 l
S
newpath
197.243 82.7125 m
194.643 82.7125 l
S
newpath
197.243 64.0383 m
194.643 64.0383 l
S
newpath
197.243 45.3641 m
194.643 45.3641 l
S
newpath
197.243 26.6899 m
194.643 26.6899 l
S
newpath
197.243 381.499 m
197.243 8.01660 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
150 94 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
197.243 381.500 m
192.043 381.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
178 380 7 13 rc
newpath
188.796 387.437 m
180.203 387.437 l
180.203 386.765 l
188.796 386.765 l
188.796 387.437 l
h
f
Q
newpath
188.531 383.234 m
190.625 382.218 l
190.828 382.218 l
190.828 389.484 l
190.828 389.963 190.849 390.263 190.890 390.382  c
190.932 390.502 191.015 390.593 191.140 390.656  c
191.265 390.718 191.520 390.755 191.906 390.765  c
191.906 391.000 l
188.671 391.000 l
188.671 390.765 l
189.078 390.755 189.341 390.718 189.460 390.656  c
189.580 390.593 189.664 390.510 189.710 390.406  c
189.757 390.302 189.781 389.994 189.781 389.484  c
189.781 384.843 l
189.781 384.208 189.760 383.802 189.718 383.625  c
189.687 383.489 189.632 383.390 189.554 383.328  c
189.476 383.265 189.380 383.234 189.265 383.234  c
189.109 383.234 188.895 383.302 188.625 383.437  c
188.531 383.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.243 288.128 m
192.043 288.128 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
169 287 7 13 rc
newpath
179.796 294.437 m
171.203 294.437 l
171.203 293.765 l
179.796 293.765 l
179.796 294.437 l
h
f
Q
newpath
178.468 293.750 m
178.468 292.770 178.617 291.924 178.914 291.210  c
179.210 290.497 179.604 289.968 180.093 289.625  c
180.479 289.354 180.875 289.218 181.281 289.218  c
181.937 289.218 182.526 289.552 183.046 290.218  c
183.703 291.052 184.031 292.182 184.031 293.609  c
184.031 294.609 183.888 295.458 183.601 296.156  c
183.315 296.854 182.947 297.362 182.500 297.679  c
182.052 297.997 181.625 298.156 181.218 298.156  c
180.395 298.156 179.708 297.671 179.156 296.703  c
178.697 295.880 178.468 294.895 178.468 293.750  c
h
179.718 293.906 m
179.718 295.093 179.864 296.062 180.156 296.812  c
180.395 297.437 180.755 297.750 181.234 297.750  c
181.463 297.750 181.700 297.648 181.945 297.445  c
182.190 297.242 182.375 296.895 182.500 296.406  c
182.697 295.687 182.796 294.661 182.796 293.328  c
182.796 292.349 182.692 291.531 182.484 290.875  c
182.338 290.385 182.140 290.041 181.890 289.843  c
181.724 289.708 181.515 289.640 181.265 289.640  c
180.984 289.640 180.729 289.765 180.500 290.015  c
180.197 290.369 179.992 290.924 179.882 291.679  c
179.773 292.434 179.718 293.177 179.718 293.906  c
h
185.203 300.171 m
185.203 299.890 l
185.640 299.744 185.976 299.520 186.210 299.218  c
186.445 298.916 186.562 298.593 186.562 298.250  c
186.562 298.177 186.546 298.109 186.515 298.046  c
186.484 298.015 186.453 298.000 186.421 298.000  c
186.380 298.000 186.281 298.041 186.125 298.125  c
186.041 298.156 185.958 298.171 185.875 298.171  c
185.666 298.171 185.502 298.112 185.382 297.992  c
185.263 297.872 185.203 297.703 185.203 297.484  c
185.203 297.276 185.281 297.099 185.437 296.953  c
185.593 296.807 185.786 296.734 186.015 296.734  c
186.296 296.734 186.546 296.854 186.765 297.093  c
186.984 297.333 187.093 297.656 187.093 298.062  c
187.093 298.500 186.942 298.906 186.640 299.281  c
186.338 299.656 185.859 299.953 185.203 300.171  c
h
193.390 289.390 m
192.890 290.468 l
190.312 290.468 l
189.750 291.625 l
190.864 291.791 191.750 292.208 192.406 292.875  c
192.968 293.447 193.250 294.125 193.250 294.906  c
193.250 295.364 193.158 295.786 192.976 296.171  c
192.794 296.557 192.562 296.885 192.281 297.156  c
192.000 297.427 191.687 297.640 191.343 297.796  c
190.864 298.036 190.364 298.156 189.843 298.156  c
189.333 298.156 188.960 298.067 188.726 297.890  c
188.492 297.713 188.375 297.520 188.375 297.312  c
188.375 297.187 188.424 297.080 188.523 296.992  c
188.622 296.903 188.744 296.859 188.890 296.859  c
188.994 296.859 189.088 296.875 189.171 296.906  c
189.255 296.937 189.395 297.026 189.593 297.171  c
189.916 297.390 190.239 297.500 190.562 297.500  c
191.062 297.500 191.497 297.312 191.867 296.937  c
192.237 296.562 192.421 296.104 192.421 295.562  c
192.421 295.041 192.255 294.557 191.921 294.109  c
191.588 293.661 191.130 293.312 190.546 293.062  c
190.078 292.875 189.447 292.765 188.656 292.734  c
190.312 289.390 l
193.390 289.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.243 194.757 m
192.043 194.757 l
S
Q
q
newpath
197.243 101.386 m
192.043 101.386 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
178.468 106.750 m
178.468 105.770 178.617 104.924 178.914 104.210  c
179.210 103.497 179.604 102.968 180.093 102.625  c
180.479 102.354 180.875 102.218 181.281 102.218  c
181.937 102.218 182.526 102.552 183.046 103.218  c
183.703 104.052 184.031 105.182 184.031 106.609  c
184.031 107.609 183.888 108.458 183.601 109.156  c
183.315 109.854 182.947 110.362 182.500 110.679  c
182.052 110.997 181.625 111.156 181.218 111.156  c
180.395 111.156 179.708 110.671 179.156 109.703  c
178.697 108.880 178.468 107.895 178.468 106.750  c
h
179.718 106.906 m
179.718 108.093 179.864 109.062 180.156 109.812  c
180.395 110.437 180.755 110.750 181.234 110.750  c
181.463 110.750 181.700 110.648 181.945 110.445  c
182.190 110.242 182.375 109.895 182.500 109.406  c
182.697 108.687 182.796 107.661 182.796 106.328  c
182.796 105.349 182.692 104.531 182.484 103.875  c
182.338 103.385 182.140 103.041 181.890 102.843  c
181.724 102.708 181.515 102.640 181.265 102.640  c
180.984 102.640 180.729 102.765 180.500 103.015  c
180.197 103.369 179.992 103.924 179.882 104.679  c
179.773 105.434 179.718 106.177 179.718 106.906  c
h
185.203 113.171 m
185.203 112.890 l
185.640 112.744 185.976 112.520 186.210 112.218  c
186.445 111.916 186.562 111.593 186.562 111.250  c
186.562 111.177 186.546 111.109 186.515 111.046  c
186.484 111.015 186.453 111.000 186.421 111.000  c
186.380 111.000 186.281 111.041 186.125 111.125  c
186.041 111.156 185.958 111.171 185.875 111.171  c
185.666 111.171 185.502 111.112 185.382 110.992  c
185.263 110.872 185.203 110.703 185.203 110.484  c
185.203 110.276 185.281 110.099 185.437 109.953  c
185.593 109.807 185.786 109.734 186.015 109.734  c
186.296 109.734 186.546 109.854 186.765 110.093  c
186.984 110.333 187.093 110.656 187.093 111.062  c
187.093 111.500 186.942 111.906 186.640 112.281  c
186.338 112.656 185.859 112.953 185.203 113.171  c
h
193.390 102.390 m
192.890 103.468 l
190.312 103.468 l
189.750 104.625 l
190.864 104.791 191.750 105.208 192.406 105.875  c
192.968 106.447 193.250 107.125 193.250 107.906  c
193.250 108.364 193.158 108.786 192.976 109.171  c
192.794 109.557 192.562 109.885 192.281 110.156  c
192.000 110.427 191.687 110.640 191.343 110.796  c
190.864 111.036 190.364 111.156 189.843 111.156  c
189.333 111.156 188.960 111.067 188.726 110.890  c
188.492 110.713 188.375 110.520 188.375 110.312  c
188.375 110.187 188.424 110.080 188.523 109.992  c
188.622 109.903 188.744 109.859 188.890 109.859  c
188.994 109.859 189.088 109.875 189.171 109.906  c
189.255 109.937 189.395 110.026 189.593 110.171  c
189.916 110.390 190.239 110.500 190.562 110.500  c
191.062 110.500 191.497 110.312 191.867 109.937  c
192.237 109.562 192.421 109.104 192.421 108.562  c
192.421 108.041 192.255 107.557 191.921 107.109  c
191.588 106.661 191.130 106.312 190.546 106.062  c
190.078 105.875 189.447 105.765 188.656 105.734  c
190.312 102.390 l
193.390 102.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
197.243 8.01574 m
192.043 8.01574 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
188.531 10.2343 m
190.625 9.21875 l
190.828 9.21875 l
190.828 16.4843 l
190.828 16.9635 190.849 17.2630 190.890 17.3828  c
190.932 17.5026 191.015 17.5937 191.140 17.6562  c
191.265 17.7187 191.520 17.7552 191.906 17.7656  c
191.906 18.0000 l
188.671 18.0000 l
188.671 17.7656 l
189.078 17.7552 189.341 17.7187 189.460 17.6562  c
189.580 17.5937 189.664 17.5104 189.710 17.4062  c
189.757 17.3020 189.781 16.9947 189.781 16.4843  c
189.781 11.8437 l
189.781 11.2083 189.760 10.8020 189.718 10.6250  c
189.687 10.4895 189.632 10.3906 189.554 10.3281  c
189.476 10.2656 189.380 10.2343 189.265 10.2343  c
189.109 10.2343 188.895 10.3020 188.625 10.4375  c
188.531 10.2343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
